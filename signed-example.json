{
  "agentCard": {
    "additionalInterfaces": [
      {
        "transport": "JSONRPC",
        "url": "https://georoute-agent.example.com/a2a/v1"
      },
      {
        "transport": "GRPC",
        "url": "https://georoute-agent.example.com/a2a/grpc"
      },
      {
        "transport": "HTTP+JSON",
        "url": "https://georoute-agent.example.com/a2a/json"
      }
    ],
    "capabilities": {
      "extensions": null,
      "pushNotifications": true,
      "stateTransitionHistory": false,
      "streaming": true
    },
    "defaultInputModes": [
      "application/json",
      "text/plain"
    ],
    "defaultOutputModes": [
      "application/json",
      "image/png"
    ],
    "description": "Provides advanced route planning, traffic analysis, and custom map generation services. This agent can calculate optimal routes, estimate travel times considering real-time traffic, and create personalized maps with points of interest.",
    "documentationUrl": "https://docs.examplegeoservices.com/georoute-agent/api",
    "iconUrl": "https://georoute-agent.example.com/icon.png",
    "name": "GeoSpatial Route Planner Agent",
    "preferredTransport": "JSONRPC",
    "protocolVersion": "0.2.9",
    "provider": {
      "organization": "Example Geo Services Inc.",
      "url": "https://www.examplegeoservices.com"
    },
    "security": [
      {
        "google": [
          "openid",
          "profile",
          "email"
        ]
      }
    ],
    "securitySchemes": {
      "google": {
        "description": null,
        "openIdConnectUrl": "https://accounts.google.com/.well-known/openid-configuration",
        "type": "openIdConnect"
      }
    },
    "skills": [
      {
        "description": "Calculates the optimal driving route between two or more locations, taking into account real-time traffic conditions, road closures, and user preferences (e.g., avoid tolls, prefer highways).",
        "examples": [
          "Plan a route from '1600 Amphitheatre Parkway, Mountain View, CA' to 'San Francisco International Airport' avoiding tolls.",
          "{\"origin\": {\"lat\": 37.422, \"lng\": -122.084}, \"destination\": {\"lat\": 37.7749, \"lng\": -122.4194}, \"preferences\": [\"avoid_ferries\"]}"
        ],
        "id": "route-optimizer-traffic",
        "inputModes": [
          "application/json",
          "text/plain"
        ],
        "name": "Traffic-Aware Route Optimizer",
        "outputModes": [
          "application/json",
          "application/vnd.geo+json",
          "text/html"
        ],
        "tags": [
          "maps",
          "routing",
          "navigation",
          "directions",
          "traffic"
        ]
      },
      {
        "description": "Creates custom map images or interactive map views based on user-defined points of interest, routes, and style preferences. Can overlay data layers.",
        "examples": [
          "Generate a map of my upcoming road trip with all planned stops highlighted.",
          "Show me a map visualizing all coffee shops within a 1-mile radius of my current location."
        ],
        "id": "custom-map-generator",
        "inputModes": [
          "application/json"
        ],
        "name": "Personalized Map Generator",
        "outputModes": [
          "image/png",
          "image/jpeg",
          "application/json",
          "text/html"
        ],
        "tags": [
          "maps",
          "customization",
          "visualization",
          "cartography"
        ]
      }
    ],
    "supportsAuthenticatedExtendedCard": true,
    "url": "https://georoute-agent.example.com/a2a/v1",
    "version": "1.2.0"
  },
  "attestations": {
    "signatureBundle": {
      "mediaType": "application/vnd.dev.sigstore.bundle.v0.3+json",
      "verificationMaterial": {
        "certificate": {
          "rawBytes": "MIICyDCCAk6gAwIBAgIUKfms8v3K6M4npoSjLwNI5cC2wG4wCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjUwODI5MTgzMjIxWhcNMjUwODI5MTg0MjIxWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgCGTg3G9ytDckGUpB+D4fNIirpX2Rp0szhN7jTapCrLyT9mQarSptHyzV3v94IRFIspg/Z5vp0LRFIiYHQw09aOCAW0wggFpMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQU6a8YJgdiFg4Ie7i6tdYQ8pykdRIwHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wHgYDVR0RAQH/BBQwEoEQYXNpZWtAcmVkaGF0LmNvbTApBgorBgEEAYO/MAEBBBtodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20wKwYKKwYBBAGDvzABCAQdDBtodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20wgYkGCisGAQQB1nkCBAIEewR5AHcAdQDdPTBqxscRMmMZHhyZZzcCokpeuN48rf+HinKALynujgAAAZj3GiESAAAEAwBGMEQCIDgfgfK03xOyhzzgHwAwd869YcxXuZbEUet+QYexyqFEAiAxYv/5DgKNUb7v5r2ku3GBPZl0MzREr9DB6Yq2hcbjjjAKBggqhkjOPQQDAwNoADBlAjBTtZ3aSKqVzAMGjbvQbBXIcJSg5IBcrqUeAFi6f3DPcVN+/qSih1Nb/enJ9HbpQI8CMQDtWuMUq4MgQpOyDyj9COciN7USbnlt19ETO0/Sl47hwr5jOucmiiMO4oV50Yj5zvw="
        },
        "tlogEntries": [
          {
            "logIndex": "450166935",
            "logId": {
              "keyId": "wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0="
            },
            "kindVersion": {
              "kind": "dsse",
              "version": "0.0.1"
            },
            "integratedTime": "1756492341",
            "inclusionPromise": {
              "signedEntryTimestamp": "MEQCIAssYlR9KNA1byh6dbn0ow/K1sDhowcy9u84kijUj+21AiAwUWl0kDG5gSM2DTBU3/eIXIUVblGw2huiQa5/YEZI6g=="
            },
            "inclusionProof": {
              "logIndex": "328262673",
              "rootHash": "/FoBpD/s/HtMQQY2Acai/UxxVd+LmFXwEk9RoMlswHs=",
              "treeSize": "328262684",
              "hashes": [
                "MehvD4656CRR/gxUgSmzk+22OGmoITLmsezaldGl5s0=",
                "oStBF9eJbNIEd+lxBRHsXCGKjeER8MuDh2I+//ecUNk=",
                "S3PTmsD8S90Iy+0Hx18F9yTvcROSZsWfCqJDrq1hGeA=",
                "s6ygCRj51B2yW0xqeIYBi2jau/RZcDQFFcNSu6TiVuc=",
                "WkeYvFGT9c2Bk35cpZLIqBRa1f6zVvtWkJvDST8TNRA=",
                "qmyWC6LuRr2rVOPATRNZR6oQ2TpJDls0WDpLiwxI52g=",
                "3XgYe1smtPfUMj/ljQFsxo+ixN/uMPQZjr01ZPhpJME=",
                "y1rlsNjSZ+gQ+rgrNVYYLnW5iX7Tht6O171mQzTUVI0=",
                "f3EEaDE7fPY/CARKdmNGgb+5h41SZ8Y2YAWc1I4LsIM=",
                "rpT/uwM9f61l0Dl/+BCa2/wX8sjav8ao4r2LOHBS4js=",
                "wmh+PHumyUJ3KiTd13tIgOhiyGt76ARdf13mzipd1nA=",
                "IoDcrbPugLiY2kXaX5Pfyf58GYtyeWcCwB+9Qb7FVt4=",
                "wCCU7hO8zBe9mf+YE82KuXgzxyhnEK0FkeZe0lH3dZ4=",
                "vS7O4ozHIQZJWBiov+mkpI27GE8zAmVCEkRcP3NDyNE="
              ],
              "checkpoint": {
                "envelope": "rekor.sigstore.dev - 1193050959916656506\n328262684\n/FoBpD/s/HtMQQY2Acai/UxxVd+LmFXwEk9RoMlswHs=\n\n\u2014 rekor.sigstore.dev wNI9ajBGAiEAh/i2KwZdiXe+TFshepWcwlFTk1VGMfByVCI/wuPWSn4CIQDFZRBZ6cldgDrQlOjdeW3eu1wyzk9Wg+q+iTPfFO9YSw==\n"
              }
            },
            "canonicalizedBody": "eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiZTA5MDY2ZDFhMWQ5M2EyMDQ3Mjg5Yjk4YTU1NmQ3OTM4MTg5YWViZjdlOGRlYTg1ODJiNWVhYjE1MjQ1YzAyNCJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjE4ZTNlZDEwNmI5NzM0YTgwOGUyNTEwZDkyMjU5MzhjMzhiNWI0NjNiMWI1MzRhZWZjN2M0OWEyMmQ2OWQ1YmIifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVVQ0lBNllkaFhlVldjMi9VNHJqRWJPMGhoUTdOQmpwK3dTK1d2cWErUTFzRGcyQWlFQXo4QU9iUjJvYng0ajNUb3E0cy9LVHpHMTlJcnErOUNWY2V3cmRLc2ZBaEE9IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VONVJFTkRRV3MyWjBGM1NVSkJaMGxWUzJadGN6aDJNMHMyVFRSdWNHOVRha3gzVGtrMVkwTXlkMGMwZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwVmQwOUVTVFZOVkdkNlRXcEplRmRvWTA1TmFsVjNUMFJKTlUxVVp6Qk5ha2w0VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVm5RMGRVWnpOSE9YbDBSR05yUjFWd1FpdEVOR1pPU1dseWNGZ3lVbkF3YzNwb1RqY0thbFJoY0VOeVRIbFVPVzFSWVhKVGNIUkllWHBXTTNZNU5FbFNSa2x6Y0djdldqVjJjREJNVWtaSmFWbElVWGN3T1dGUFEwRlhNSGRuWjBad1RVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVTJZVGhaQ2twblpHbEdaelJKWlRkcE5uUmtXVkU0Y0hsclpGSkpkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMGhuV1VSV1VqQlNRVkZJTDBKQ1VYZEZiMFZSV1ZoT2NGcFhkRUZqYlZacllVZEdNRXh0VG5aaVZFRndRbWR2Y2tKblJVVkJXVTh2VFVGRlFncENRblJ2WkVoU2QyTjZiM1pNTWtacVdUSTVNV0p1VW5wTWJXUjJZakprYzFwVE5XcGlNakIzUzNkWlMwdDNXVUpDUVVkRWRucEJRa05CVVdSRVFuUnZDbVJJVW5kamVtOTJUREpHYWxreU9URmlibEo2VEcxa2RtSXlaSE5hVXpWcVlqSXdkMmRaYTBkRGFYTkhRVkZSUWpGdWEwTkNRVWxGWlhkU05VRklZMEVLWkZGRVpGQlVRbkY0YzJOU1RXMU5Xa2hvZVZwYWVtTkRiMnR3WlhWT05EaHlaaXRJYVc1TFFVeDViblZxWjBGQlFWcHFNMGRwUlZOQlFVRkZRWGRDUndwTlJWRkRTVVJuWm1kbVN6QXplRTk1YUhwNlowaDNRWGRrT0RZNVdXTjRXSFZhWWtWVlpYUXJVVmxsZUhseFJrVkJhVUY0V1hZdk5VUm5TMDVWWWpkMkNqVnlNbXQxTTBkQ1VGcHNNRTE2VWtWeU9VUkNObGx4TW1oalltcHFha0ZMUW1kbmNXaHJhazlRVVZGRVFYZE9iMEZFUW14QmFrSlVkRm96WVZOTGNWWUtla0ZOUjJwaWRsRmlRbGhKWTBwVFp6VkpRbU55Y1ZWbFFVWnBObVl6UkZCalZrNHJMM0ZUYVdneFRtSXZaVzVLT1VoaWNGRkpPRU5OVVVSMFYzVk5WUXB4TkUxblVYQlBlVVI1YWpsRFQyTnBUamRWVTJKdWJIUXhPVVZVVHpBdlUydzBOMmgzY2pWcVQzVmpiV2xwVFU4MGIxWTFNRmxxTlhwMmR6MEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0ifV19fQ=="
          }
        ],
        "timestampVerificationData": {}
      },
      "dsseEnvelope": {
        "payload": "eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiR2VvU3BhdGlhbCBSb3V0ZSBQbGFubmVyIEFnZW50IiwiZGlnZXN0Ijp7InNoYTI1NiI6IjQ3NTM4MzJkZmEzNDMxOTdmYjA2NGEzYTVlZDA5ZWZhZTRlYzA4YWNhMWRjY2RkMTIwYjkzMjA2NWRmODA1ZmMifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9hMmEub3BlbndhbGxldC5kZXYvYWdlbnRjYXJkL3YxIiwicHJlZGljYXRlIjp7InByb3RvY29sVmVyc2lvbiI6IjAuMi45IiwibmFtZSI6Ikdlb1NwYXRpYWwgUm91dGUgUGxhbm5lciBBZ2VudCIsImRlc2NyaXB0aW9uIjoiUHJvdmlkZXMgYWR2YW5jZWQgcm91dGUgcGxhbm5pbmcsIHRyYWZmaWMgYW5hbHlzaXMsIGFuZCBjdXN0b20gbWFwIGdlbmVyYXRpb24gc2VydmljZXMuIFRoaXMgYWdlbnQgY2FuIGNhbGN1bGF0ZSBvcHRpbWFsIHJvdXRlcywgZXN0aW1hdGUgdHJhdmVsIHRpbWVzIGNvbnNpZGVyaW5nIHJlYWwtdGltZSB0cmFmZmljLCBhbmQgY3JlYXRlIHBlcnNvbmFsaXplZCBtYXBzIHdpdGggcG9pbnRzIG9mIGludGVyZXN0LiIsInVybCI6Imh0dHBzOi8vZ2Vvcm91dGUtYWdlbnQuZXhhbXBsZS5jb20vYTJhL3YxIiwicHJlZmVycmVkVHJhbnNwb3J0IjoiSlNPTlJQQyIsImFkZGl0aW9uYWxJbnRlcmZhY2VzIjpbeyJ1cmwiOiJodHRwczovL2dlb3JvdXRlLWFnZW50LmV4YW1wbGUuY29tL2EyYS92MSIsInRyYW5zcG9ydCI6IkpTT05SUEMifSx7InVybCI6Imh0dHBzOi8vZ2Vvcm91dGUtYWdlbnQuZXhhbXBsZS5jb20vYTJhL2dycGMiLCJ0cmFuc3BvcnQiOiJHUlBDIn0seyJ1cmwiOiJodHRwczovL2dlb3JvdXRlLWFnZW50LmV4YW1wbGUuY29tL2EyYS9qc29uIiwidHJhbnNwb3J0IjoiSFRUUCtKU09OIn1dLCJwcm92aWRlciI6eyJvcmdhbml6YXRpb24iOiJFeGFtcGxlIEdlbyBTZXJ2aWNlcyBJbmMuIiwidXJsIjoiaHR0cHM6Ly93d3cuZXhhbXBsZWdlb3NlcnZpY2VzLmNvbSJ9LCJpY29uVXJsIjoiaHR0cHM6Ly9nZW9yb3V0ZS1hZ2VudC5leGFtcGxlLmNvbS9pY29uLnBuZyIsInZlcnNpb24iOiIxLjIuMCIsImRvY3VtZW50YXRpb25VcmwiOiJodHRwczovL2RvY3MuZXhhbXBsZWdlb3NlcnZpY2VzLmNvbS9nZW9yb3V0ZS1hZ2VudC9hcGkiLCJjYXBhYmlsaXRpZXMiOnsic3RyZWFtaW5nIjp0cnVlLCJwdXNoTm90aWZpY2F0aW9ucyI6dHJ1ZSwic3RhdGVUcmFuc2l0aW9uSGlzdG9yeSI6ZmFsc2V9LCJzZWN1cml0eVNjaGVtZXMiOnsiZ29vZ2xlIjp7InR5cGUiOiJvcGVuSWRDb25uZWN0Iiwib3BlbklkQ29ubmVjdFVybCI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS8ud2VsbC1rbm93bi9vcGVuaWQtY29uZmlndXJhdGlvbiJ9fSwic2VjdXJpdHkiOlt7Imdvb2dsZSI6WyJvcGVuaWQiLCJwcm9maWxlIiwiZW1haWwiXX1dLCJkZWZhdWx0SW5wdXRNb2RlcyI6WyJhcHBsaWNhdGlvbi9qc29uIiwidGV4dC9wbGFpbiJdLCJkZWZhdWx0T3V0cHV0TW9kZXMiOlsiYXBwbGljYXRpb24vanNvbiIsImltYWdlL3BuZyJdLCJza2lsbHMiOlt7ImlkIjoicm91dGUtb3B0aW1pemVyLXRyYWZmaWMiLCJuYW1lIjoiVHJhZmZpYy1Bd2FyZSBSb3V0ZSBPcHRpbWl6ZXIiLCJkZXNjcmlwdGlvbiI6IkNhbGN1bGF0ZXMgdGhlIG9wdGltYWwgZHJpdmluZyByb3V0ZSBiZXR3ZWVuIHR3byBvciBtb3JlIGxvY2F0aW9ucywgdGFraW5nIGludG8gYWNjb3VudCByZWFsLXRpbWUgdHJhZmZpYyBjb25kaXRpb25zLCByb2FkIGNsb3N1cmVzLCBhbmQgdXNlciBwcmVmZXJlbmNlcyAoZS5nLiwgYXZvaWQgdG9sbHMsIHByZWZlciBoaWdod2F5cykuIiwidGFncyI6WyJtYXBzIiwicm91dGluZyIsIm5hdmlnYXRpb24iLCJkaXJlY3Rpb25zIiwidHJhZmZpYyJdLCJleGFtcGxlcyI6WyJQbGFuIGEgcm91dGUgZnJvbSAnMTYwMCBBbXBoaXRoZWF0cmUgUGFya3dheSwgTW91bnRhaW4gVmlldywgQ0EnIHRvICdTYW4gRnJhbmNpc2NvIEludGVybmF0aW9uYWwgQWlycG9ydCcgYXZvaWRpbmcgdG9sbHMuIiwie1wib3JpZ2luXCI6IHtcImxhdFwiOiAzNy40MjIsIFwibG5nXCI6IC0xMjIuMDg0fSwgXCJkZXN0aW5hdGlvblwiOiB7XCJsYXRcIjogMzcuNzc0OSwgXCJsbmdcIjogLTEyMi40MTk0fSwgXCJwcmVmZXJlbmNlc1wiOiBbXCJhdm9pZF9mZXJyaWVzXCJdfSJdLCJpbnB1dE1vZGVzIjpbImFwcGxpY2F0aW9uL2pzb24iLCJ0ZXh0L3BsYWluIl0sIm91dHB1dE1vZGVzIjpbImFwcGxpY2F0aW9uL2pzb24iLCJhcHBsaWNhdGlvbi92bmQuZ2VvK2pzb24iLCJ0ZXh0L2h0bWwiXX0seyJpZCI6ImN1c3RvbS1tYXAtZ2VuZXJhdG9yIiwibmFtZSI6IlBlcnNvbmFsaXplZCBNYXAgR2VuZXJhdG9yIiwiZGVzY3JpcHRpb24iOiJDcmVhdGVzIGN1c3RvbSBtYXAgaW1hZ2VzIG9yIGludGVyYWN0aXZlIG1hcCB2aWV3cyBiYXNlZCBvbiB1c2VyLWRlZmluZWQgcG9pbnRzIG9mIGludGVyZXN0LCByb3V0ZXMsIGFuZCBzdHlsZSBwcmVmZXJlbmNlcy4gQ2FuIG92ZXJsYXkgZGF0YSBsYXllcnMuIiwidGFncyI6WyJtYXBzIiwiY3VzdG9taXphdGlvbiIsInZpc3VhbGl6YXRpb24iLCJjYXJ0b2dyYXBoeSJdLCJleGFtcGxlcyI6WyJHZW5lcmF0ZSBhIG1hcCBvZiBteSB1cGNvbWluZyByb2FkIHRyaXAgd2l0aCBhbGwgcGxhbm5lZCBzdG9wcyBoaWdobGlnaHRlZC4iLCJTaG93IG1lIGEgbWFwIHZpc3VhbGl6aW5nIGFsbCBjb2ZmZWUgc2hvcHMgd2l0aGluIGEgMS1taWxlIHJhZGl1cyBvZiBteSBjdXJyZW50IGxvY2F0aW9uLiJdLCJpbnB1dE1vZGVzIjpbImFwcGxpY2F0aW9uL2pzb24iXSwib3V0cHV0TW9kZXMiOlsiaW1hZ2UvcG5nIiwiaW1hZ2UvanBlZyIsImFwcGxpY2F0aW9uL2pzb24iLCJ0ZXh0L2h0bWwiXX1dLCJzdXBwb3J0c0F1dGhlbnRpY2F0ZWRFeHRlbmRlZENhcmQiOnRydWV9fQ==",
        "payloadType": "application/vnd.in-toto+json",
        "signatures": [
          {
            "sig": "MEUCIA6YdhXeVWc2/U4rjEbO0hhQ7NBjp+wS+Wvqa+Q1sDg2AiEAz8AObR2obx4j3Toq4s/KTzG19Irq+9CVcewrdKsfAhA="
          }
        ]
      }
    },
    "provenanceBundle": null
  }
}
